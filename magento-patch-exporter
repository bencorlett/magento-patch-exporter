#!/usr/bin/env php
<?php

error_reporting(E_ALL);

try {

    if (!isset($argv[2])) {
        throw new InvalidArgumentException('Usage: php magento-patch-exporter /path/to/magento /path/to/export');
    }

    list(, $magento, $export) = array_map(function ($_argv) {
        return realpath($_argv);
    }, $argv);

    if (!is_dir($magento)) {
        throw new InvalidArgumentException("Path {$argv[1]} is not a valid directory");
    }

    $patchesFile = "{$magento}/app/etc/applied.patches.list";

    if (!is_file($patchesFile)) {
        echo "No patches file found at {$patchesFile}".PHP_EOL;
        exit;
    }

    $lines = array_filter(file($patchesFile, FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES), function ($line) {
        return preg_match('/^patching file.*$/', $line);
    });

    $patchedFiles = array_unique(array_map(function ($line) {
        return str_replace('patching file ', '', $line);
    }, $lines));

    echo 'Preparing to patch '.count($patchedFiles).' file(s)...'.PHP_EOL.PHP_EOL;

    foreach ($patchedFiles as $patchedFile) {
        $source      = "{$magento}/{$patchedFile}";
        $destination = "{$export}/{$patchedFile}";

        echo <<<OUTPUT
Exporting...
  - Source:      {$source}
  - Destination: {$destination}


OUTPUT;

        if (!is_dir($destinationPath = dirname($destination))) {
            mkdir($destinationPath, 0755, true);
        }

        if (!@copy($source, $destination)) {
            throw new RuntimeException("Failed to copy {$source}");
        }
    }

} catch (Exception $e) {
    echo $e->getMessage().PHP_EOL;
    exit(1);
}
